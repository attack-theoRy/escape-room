{"version":3,"sources":["auth.js","components/ProtectedRoute/index.js","utils/API.js","components/Form/index.js","components/Card/index.js","scenes/Welcome/index.js","scenes/Background/index.js","scenes/Office/index.js","scenes/Bookshelf/index.js","scenes/Painting/index.js","scenes/Desk/index.js","scenes/Safe/index.js","scenes/ScoreBoard/index.js","components/Navbar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["auth","Auth","Object","classCallCheck","this","authenticated","cb","ProtectedRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","isAuthenticated","to","pathname","state","from","location","API","createUser","userData","axios","post","checkUser","Form","className","onChange","name","type","placeholder","aria-label","onClick","Card","children","Welcome","storedJwt","localStorage","getItem","_useState","useState","_useState2","slicedToArray","jwt","setJwt","getJwt","asyncToGenerator","regenerator_default","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","get","sent","token","stop","apply","arguments","_useState3","_useState4","formObject","setFormObject","handleInputChange","event","_event$target","target","value","objectSpread","defineProperty","components_Card","components_Form","preventDefault","firstName","lastName","email","password","then","login","history","push","console","log","catch","err","Background","Office","Bookshelf","Painting","Desk","Safe","ScoreBoard","Navbar","style","backgroundColor","react_router_dom","fontSize","id","window","App","components_Navbar","exact","path","components_ProtectedRoute","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0b99aa95.chunk.js","sourcesContent":["\nclass Auth {\n    constructor() {\n        this.authenticated = false;\n    }\n\n    login(cb) {\n        this.authenticated = true;\n        cb();\n    }\n\n    logout(cb) {\n        this.authenticated = false;\n        cb();\n    }\n\n    isAuthenticated() {\n        return this.authenticated;\n    }\n}\n\nexport default new Auth();","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport auth from \"../../auth.js\"\n\n// if user is logged in, the component specified will render, otherwise they are redirected to login\nfunction ProtectedRoute ({  component: Component, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                if (auth.isAuthenticated()) {\n                    return <Component {...props} />\n                }\n                else {\n                    return <Redirect to={\n                        {\n                            pathname: \"/\",\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    } />\n                }\n            }}\n        />\n    )\n};\n\nexport default ProtectedRoute","import axios from \"axios\";\n\nexport default {\n  // Saves a user to the database\n  createUser: function(userData) {\n    return axios.post(\"/api/user/signup\", userData);\n  },\n\n  checkUser: function(userData) {\n    return axios.post(\"/api/user/login\", userData);\n  }\n};\n","import React from 'react';\n\nfunction Form(props) {\n    return (\n      <form>\n        <div className=\"form-group\"> Sign Up\n            <div className=\"input-group mb-3\">\n              <input onChange={props.onChange} name=\"firstName\" type=\"text\" className=\"form-control\" placeholder=\"First Name\" aria-label=\"First Name\"/>\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input onChange={props.onChange} name=\"lastName\" type=\"text\" className=\"form-control\" placeholder=\"Last Name\" aria-label=\"Last Name\"/>\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input onChange={props.onChange} name=\"email\" type=\"text\" className=\"form-control\" placeholder=\"Email\" aria-label=\"Email\"/>\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input onChange={props.onChange} name=\"password\" type=\"text\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\"/>\n            </div>\n          <button type=\"submit\" onClick={props.onClick} className=\"btn btn-warning\">\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n  \n  export default Form;","import \"./style.css\";\nimport React from 'react'\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">{props.children}</div>\n  );\n}\n\nexport default Card;","\nimport React, { useState } from \"react\";\nimport API from \"../../utils/API\";\nimport Form from '../../components/Form';\nimport Card from '../../components/Card';\nimport './style.css'\nimport auth from \"../../auth\"\nimport axios from 'axios';\n\n// import Background from \"../Background\"\n\n// axios.interceptors.request.use(\n//   config => {\n//     const { origin } = new URL(config.url);\n//     const allowedOrigins = [apiUrl];\n//     const token = localStorage.getItem('token');\n//     if (allowedOrigins.includes(origin)) {\n//       config.headers.authorization = `Bearer ${token}`;\n//     }\n//     return config;\n//   },\n//   error => {\n//     return Promise.reject(error);\n//   }\n// );\n\nfunction Welcome (props) {\n    const storedJwt = localStorage.getItem('token');\n    const [jwt, setJwt] = useState(storedJwt || null);\n\n    const getJwt = async () => {\n    const { data } = await axios.get(`/jwt`);\n    setJwt(data.token);\n    }\n  \n\n    // Setting our component's initial state\n    const [formObject, setFormObject] = useState({})\n    // const [user, setUser] = useState({email: \"\", password: \"\"})\n\n    // Handles updating component state when the user types into the input field\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormObject({...formObject, [name]: value})\n    };\n\n    // When the form is submitted, use the API.saveUser method to save the User data\n    function handleSignUpSubmit(event) {\n        event.preventDefault();\n        API.createUser({\n            firstName: formObject.firstName,\n            lastName: formObject.lastName,\n            email: formObject.email,\n            password: formObject.password\n        })\n        .then(auth.login(() => {\n            props.history.push(\"/background\")\n            getJwt()\n            console.log(jwt)\n        }))\n        .catch(err => console.log(err));\n    };\n\n    // doesnt actually work, can put in anything you want and be \"logged in\"\n    function handleLogInSubmit(event) {\n        event.preventDefault();\n        API.checkUser({\n            email: formObject.email,\n            password: formObject.password\n        })\n        .then(auth.login(() => {\n            props.history.push(\"/background\")\n        }))\n        .catch(err => console.log(err));\n    };\n\n\n\n    return(\n        <div>\n            <header>\n                <h1>Welcome</h1>\n            </header>\n            <Card>\n                <Form\n                    onChange={handleInputChange}\n                    onClick={handleSignUpSubmit}\n                />\n            </Card>\n            <Card>\n                <form>\n                    <div className=\"form-group\"> Log In\n\n                        <div className=\"input-group mb-3\">\n                            <input onChange={handleInputChange} name=\"email\" type=\"text\" className=\"form-control\" placeholder=\"Email\" aria-label=\"Email\"/>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <input onChange={handleInputChange} name=\"password\" type=\"text\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\"/>\n                        </div>\n                        <button\n                            type=\"submit\"\n                            onClick={handleLogInSubmit}\n                            className=\"btn btn-warning\"\n                        >\n                            Log In\n                        </button>\n                        {/* <button \n                            type=\"submit\" \n                            onClick={() => {\n                                auth.login(() => {\n                                    props.history.push(\"/background\")\n                                })\n                            }} \n                            className=\"btn btn-warning\">\n                            Log In\n                        </button> */}\n                    </div>\n                </form>\n            </Card>\n        </div>\n    );\n}\n\nexport default Welcome\n","import React from \"react\";\nfunction Background () {\n    return (\n        <h1>Background</h1>\n    )\n}\n\nexport default Background","import React from 'react'\n\nfunction Office () {\n    return (\n        <h1>Office</h1>\n    )\n}\n\nexport default Office","import React from 'react'\nfunction Bookshelf () {\n    return (\n        <h1>Bookshelf</h1>\n    )\n}\n\nexport default Bookshelf","import React from 'react'\n\nfunction Painting () {\n    return (\n        <h1>Painting</h1>\n    )\n}\n\nexport default Painting","import React from 'react'\n\nfunction Desk () {\n    return (\n        <h1>Desk</h1>\n    )\n}\n\nexport default Desk","import React from 'react'\n\nfunction Safe () {\n    return (\n        <h1>Safe</h1>\n    )\n}\n\nexport default Safe","import React from 'react'\n\nfunction ScoreBoard () {\n    return (\n        <h1>Score Board</h1>\n    )\n}\n\nexport default ScoreBoard","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar navbar-light\"\n      style={{ backgroundColor: \"pink\" }}\n    >\n      <Link className=\"navbar-brand\" to=\"/\" style={{ fontSize: \"25px\" }}>\n        Escape Game\n      </Link>\n      <div className=\"container-fluid collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/background\"\n              className={\n                window.location.pathname === \"/background\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Main Room\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/scoreBoard\"\n              className={\n                window.location.pathname === \"/scoreBoard\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Score Board\n            </Link>\n          </li>\n        </ul>\n        <span className=\"navbar-item\">\n          <Link to=\"/\" className={\"nav-link\"}>Logout</Link>\n        </span>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/ProtectedRoute\"\nimport React from 'react';\nimport \"./App.css\";\nimport Welcome from './scenes/Welcome'\nimport Background from './scenes/Background'\nimport Office from './scenes/Office'\nimport Bookshelf from './scenes/Bookshelf'\nimport Painting from './scenes/Painting'\nimport Desk from './scenes/Desk'\nimport Safe from './scenes/Safe'\nimport ScoreBoard from './scenes/ScoreBoard'\nimport Navbar from './components/Navbar'\n// import auth from \"./auth\"\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Welcome} />\n          <ProtectedRoute exact path=\"/background\" component={Background} />\n          <ProtectedRoute exact path=\"/office\" component={Office} />\n          <ProtectedRoute exact path=\"/bookshelf\" component={Bookshelf} />\n          <ProtectedRoute exact path=\"/painting\" component={Painting} />\n          <ProtectedRoute exact path=\"/desk\" component={Desk} />\n          <ProtectedRoute exact path=\"/safe\" component={Safe} />\n          <ProtectedRoute exact path=\"/scoreBoard\" component={ScoreBoard} />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}